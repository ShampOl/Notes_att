import csv
import os
from datetime import datetime


class Note:
    def __init__(self, note_id, title, body, created_at=None, updated_at=None):
        self.note_id = note_id
        self.title = title
        self.body = body
        self.created_at = created_at if created_at else datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        self.updated_at = updated_at if updated_at else datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    def __repr__(self):
        return f"ID: {self.note_id}\n–ó–∞–≥–æ–ª–æ–≤–æ–∫: {self.title}\n–¢–µ–∫—Å—Ç: {self.body}\n–°–æ–∑–¥–∞–Ω–æ: {self.created_at}\n–û–±–Ω–æ–≤–ª–µ–Ω–æ: {self.updated_at}"


class NotesApp:
    def __init__(self):
        self.notes = []

    def load_notes(self, file_name):
        if os.path.exists(file_name):
            with open(file_name, 'r', newline='', encoding='utf-8') as file:
                reader = csv.DictReader(file)
                for row in reader:
                    self.notes.append(Note(int(row['ID']), row['–ó–∞–≥–æ–ª–æ–≤–æ–∫'], row['–¢–µ–∫—Å—Ç'], row['–°–æ–∑–¥–∞–Ω–æ'], row['–û–±–Ω–æ–≤–ª–µ–Ω–æ']))

    def save_notes(self, file_name):
        with open(file_name, 'w', newline='', encoding='utf-8') as csvfile:
            fieldnames = ['ID', '–ó–∞–≥–æ–ª–æ–≤–æ–∫', '–¢–µ–∫—Å—Ç', '–°–æ–∑–¥–∞–Ω–æ', '–û–±–Ω–æ–≤–ª–µ–Ω–æ']
            writer = csv.DictWriter(csvfile, fieldnames=fieldnames)
            writer.writeheader()
            for note in self.notes:
                writer.writerow({
                    'ID': note.note_id,
                    '–ó–∞–≥–æ–ª–æ–≤–æ–∫': note.title,
                    '–¢–µ–∫—Å—Ç': note.body,
                    '–°–æ–∑–¥–∞–Ω–æ': note.created_at,
                    '–û–±–Ω–æ–≤–ª–µ–Ω–æ': note.updated_at
                })

    def create_note(self, title, body):
        note_id = len(self.notes) + 1
        new_note = Note(note_id, title, body)
        self.notes.append(new_note)
        self.save_notes('notes.csv')  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è
        return new_note

    def edit_note(self, note_id, title, body):
        for note in self.notes:
            if note.note_id == note_id:
                note.title = title
                note.body = body
                note.updated_at = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                self.save_notes('notes.csv')  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                return note
        return None

    def delete_note(self, note_id):
        for note in self.notes:
            if note.note_id == note_id:
                self.notes.remove(note)
                self.save_notes('notes.csv')  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
                return True
        return False

    def get_note_by_id(self, note_id):
        for note in self.notes:
            if note.note_id == note_id:
                return note
        return None

    def get_all_notes(self):
        return self.notes

    def filter_notes_by_date(self, date, mode='created'):
        filtered_notes = []
        for note in self.notes:
            if mode == 'created':
                if note.created_at.startswith(date):
                    filtered_notes.append(note)
            elif mode == 'updated':
                if note.updated_at.startswith(date):
                    filtered_notes.append(note)
        return filtered_notes


def main():
    notes_app = NotesApp()
    notes_app.load_notes('notes.csv')

    while True:
        print("\nüôã–ú–µ–Ω—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ó–∞–º–µ—Ç–∫–∏üôã")
        print("üìù1. –°–æ–∑–¥–∞—Ç—å –∑–∞–º–µ—Ç–∫—É")
        print("üìë2. –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–º–µ—Ç–∫—É")
        print("‚ùå3. –£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É")
        print("üëÄ4. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–º–µ—Ç–∫—É")
        print("üìÖ5. –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏")
        print("‚è≥6. –§–∏–ª—å—Ç—Ä –∑–∞–º–µ—Ç–æ–∫ –ø–æ –¥–∞—Ç–µ")
        print("üëã7. –í—ã–π—Ç–∏")

        choice = input("–í–≤–µ–¥–∏—Ç–µ –í–∞—à –≤—ã–±–æ—Äüëâ: ")

        if choice == '1':
            title = input("–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–º–µ—Ç–∫–∏: ")
            body = input("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–º–µ—Ç–∫–∏: ")
            note = notes_app.create_note(title, body)
            print(f"–ó–∞–º–µ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ —Å ID: {note.note_id}‚úÖ")

        elif choice == '2':
            note_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –∑–∞–º–µ—Ç–∫–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: "))
            title = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫: ")
            body = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç: ")
            if notes_app.edit_note(note_id, title, body):
                print("–ó–∞–º–µ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∞‚úÖ")
            else:
                print("–ó–∞–º–µ—Ç–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞‚ùå")

        elif choice == '3':
            note_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –∑–∞–º–µ—Ç–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: "))
            if notes_app.delete_note(note_id):
                print("–ó–∞–º–µ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞‚úÖ")
            else:
                print("–ó–∞–º–µ—Ç–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞‚ùå")
        elif choice == '4':
            note_id = int(input("–í–≤–µ–¥–∏—Ç–µ ID –∑–∞–º–µ—Ç–∫–∏ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞: "))
            note = notes_app.get_note_by_id(note_id)
            if note:
                print(note)
            else:
                print("–ó–∞–º–µ—Ç–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞‚ùå")

        elif choice == '5':
            all_notes = notes_app.get_all_notes()
            if all_notes:
                for note in all_notes:
                    print(note)
            else:
                print("–ó–∞–º–µ—Ç–æ–∫ –Ω–µ—Ç‚ùå")
        
        elif choice == '6':
            date = input("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É (–ì–ì–ì–ì-–ú–ú-–î–î): ")
            filtered_notes = notes_app.filter_notes_by_date(date)
            if filtered_notes:
                print("–û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏‚úÖ:")
                for note in filtered_notes:
                    print(note)
            else:
                print("–ó–∞–º–µ—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–∞—Ç—ã‚ùå")

        elif choice == '7':
            notes_app.save_notes('notes.csv')
            print("üåû–í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ó–∞–º–µ—Ç–∫–∏. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!üåû")
            break
        else:
                print("‚ùå–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 7‚ùå")
        

if __name__ == "__main__":
    main()
